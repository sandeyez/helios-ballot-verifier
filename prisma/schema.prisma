// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MerkleNode {
  id       String   @id @default(uuid())
  value     String

  leftBallotId  String? @unique
  leftBallot    Ballot? @relation("LeftBallot", fields: [leftBallotId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  rightBallotId String? @unique
  rightBallot   Ballot? @relation("RightBallot", fields: [rightBallotId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  leftId  String?
  left    MerkleNode? @relation("LeftNode", fields: [leftId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  rightId String?
  right   MerkleNode? @relation("RightNode", fields: [rightId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  leftChildOf   MerkleNode? @relation("LeftNode")
  rightChildOf  MerkleNode? @relation("RightNode")

  @@unique(id)
  @@unique(leftId)
  @@unique(rightId)
}

model RadixNode {
  id       String   @id @default(uuid())
  value     String

  leftBallotId  String? @unique
  leftBallot    Ballot? @relation("LeftBallot", fields: [leftBallotId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  rightBallotId String? @unique
  rightBallot   Ballot? @relation("RightBallot", fields: [rightBallotId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  leftId  String?
  left    RadixNode? @relation("LeftNode", fields: [leftId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  rightId String?
  right   RadixNode? @relation("RightNode", fields: [rightId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  leftChildOf   RadixNode? @relation("LeftNode")
  rightChildOf  RadixNode? @relation("RightNode")

  @@unique(id)
  @@unique(leftId)
  @@unique(rightId)
}

model Ballot {
  id      String   @id @default(uuid())

  leftChildOfMerkleParent  MerkleNode? @relation("LeftBallot")
  rightChildOfMerkleParent MerkleNode? @relation("RightBallot")

  leftChildOfRadixParent  RadixNode? @relation("LeftBallot")
  rightChildOfRadixParent RadixNode? @relation("RightBallot")
}